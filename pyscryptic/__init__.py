import codecs
d = (obfuscator:=
    lambda data: [(data:=i[0](data, i[1])) for i in eval('''[((lambda dt, iter_data: [(dt:=[j.replace(*(lambda z: (z[1], z[0]))(i)) for j in dt]) for i in iter_data][-1]),[("^A^", "()"),("^B^", "):"),("^C^", "(self, "),("^D^", "    "),("^E^", ", "),("^F^", "self."),("^G^", "self,"),("^H^", "class "),("^I^", " = "),("^J^", "import "),("^K^", "def "),("^L^", "__init__"),("^M^", 'if __name__ == "__main__":'),("^N^", "\\n")]),((lambda dt, iter_data: "|".join([dt, iter_data][0])),[None]),((lambda dt, iter_data: [(dt:=dt.replace(*(lambda z: (z[1], z[0]))(i))) for i in iter_data][-1]),[("^O^", "^D^^D^"),("^P^", "^N^|^N^"),("^Q^", "^P^|^N^"),("^R^", "^N^|^D^"),("^S^", "^N^|^O^")]),((lambda dt, iter_data: [(dt:=dt.replace(*(lambda z: (z[1], z[0]))(i))) for i in iter_data][-1]),[("^T^", "^B^^R^"),("^U^", "^K^^L^^C^")]),((lambda dt, iter_data: codecs.encode(dt, 'rot_13')),[None])]''')][-1],
    'lambda data: "".join([(data:=i[0](data,i[1])) for i in eval("""{}""")[::-1]][-1])'.format('[((lambda dt, iter_data: [(dt:=[j.replace(*i) for j in dt]) for i in iter_data][-1]),[("^A^","()"),("^B^","):"),("^C^","(self, "),("^D^","    "),("^E^",", "),("^F^","self."),("^G^","self,"),("^H^","class "),("^I^"," = "),("^J^","import "),("^K^","def "),("^L^","__init__"),("^M^",\'if __name__ == "__main__":\'),("^N^","\\\\n")][::-1]),((lambda dt, iter_data: [dt, iter_data][0].split("|")),[None]),((lambda dt, iter_data: [(dt:=dt.replace(*i)) for i in iter_data][-1]),[("^O^", "^D^^D^"),("^P^", "^N^|^N^"),("^Q^", "^P^|^N^"),("^R^", "^N^|^D^"),("^S^", "^N^|^O^")][::-1]),((lambda dt, iter_data: [(dt:=dt.replace(*i)) for i in iter_data][-1]),[("^T^", "^B^^R^"),("^U^", "^K^^L^^C^")][::-1]),((lambda dt, iter_data: codecs.encode(dt, "rot_13")),[None][::-1]),]')
)

__all__ = ['obfuscator']